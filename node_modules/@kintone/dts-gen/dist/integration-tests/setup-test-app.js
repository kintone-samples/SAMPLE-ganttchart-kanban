"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
const commander_1 = require("commander");
const setup_test_app_client_1 = require("../kintone/clients/setup-test-app-client");
const setup_test_utils_1 = require("./setup-test-utils");
const logger_1 = require("../utils/logger");
const handleSetupApp = (command) => __awaiter(void 0, void 0, void 0, function* () {
    const newClientInput = {
        baseUrl: command.baseUrl,
        username: command.username,
        password: command.password,
        apiToken: command.apiToken,
        oAuthToken: command.oAuthToken,
        proxy: command.proxy,
        basicAuthUsername: command.basicAuthUsername,
        basicAuthPassword: command.basicAuthPassword,
    };
    const client = new setup_test_app_client_1.SetUpTestAppClient(newClientInput);
    const app = yield setup_test_utils_1.SetupTestApp.createKintoneApp(client, "dts-gen-integration-test");
    yield setup_test_utils_1.SetupTestApp.addDemoField(client, app);
    const data = fs.createReadStream(command.integrationTestJsFile);
    const fileKey = yield setup_test_utils_1.SetupTestApp.uploadFile(client, data, {
        name: "dts-gen-integration-test.js",
        contentType: "text/javascript",
    });
    yield setup_test_utils_1.SetupTestApp.updateJsCustomize(client, app, fileKey);
    yield setup_test_utils_1.SetupTestApp.deployApp(client, app);
    (0, logger_1.log)("Adding Demo Record");
    yield setup_test_utils_1.SetupTestApp.addDemoRecord(client, app, command.integrationTestJsFile);
});
(() => __awaiter(void 0, void 0, void 0, function* () {
    const program = new commander_1.Command();
    program
        .version("0.0.1")
        .option("-u, --username <username>")
        .option("-p, --password <password>")
        .option("--base-url <base-url>")
        .option("--proxy [proxy]", "proxy server", null)
        .option("--basic-auth-username [basicAuthUsername]", "username for basic authentication", null)
        .option("--basic-auth-password [basicAuthPassword]", "password for basic authentication", null)
        .option("--integration-test-js-file <integrationTestJsFile>", "path to integration js file which will be uploaded to test kintone app")
        .parse(process.argv);
    const options = program.opts();
    yield handleSetupApp(options);
}))();
//# sourceMappingURL=setup-test-app.js.map